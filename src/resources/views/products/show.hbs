<style>
    .listImgs {
        display: flex;
        width: 90%;
        height: 150px;
        align-items: center;
    }

    .listImgs_img {
        border-radius: 5px;
        margin: 0 5px;
        max-width: 35%;
        max-height: 35%;
        object-fit: cover;
    }
</style>


<div class="row">
    <div class="col-lg-8">
        <img src="{{lookup product.images 0}}" class="img-fluid rounded-start larger_img"
            style="width: 90%; height: 400px; object-fit: cover;  margin: 0 5px auto; border: 2px solid #419edc; border-radius: 5px;"
            alt="{{this.name}}">
        <div class="listImgs">
            {{#each product.images}}
            <img src="{{this}}" class="img-fluid rounded-start listImgs_img" alt="{{../name}}">
            {{/each}}
        </div>
    </div>
    <div class="col-lg-4">
        <small>Tên sản phẩm:</small>
        <h4>{{product.name}}</h4>
        <small>Mô tả sản phẩm:</small>
        <p>{{product.description}}</p>
        <small>Giá sản phẩm:</small>
        <p>{{product.price}}$</p>
        <a href="/order/orderDetail/{{product._id}}" id="order_btn" class="btn btn-success" data-product-id="{{product._id}}">Mua ngay</a>
        {{{disabledAddCartBtn account product}}}
    </div>
</div>
<div class="row mb-4">
    <div class="col-lg-12">
        <h5>Đánh giá sản phẩm <small class="count_cmts"></small> </h5>
        {{{loadCommentForm account product}}}
        <div class="comment_block" style="width: 90%;" data-productId="{{product._id}}"
            data-accountId="{{#if account._id}}{{account._id}}{{else}}'null'{{/if}}">
            {{!-- render comments --}}
        </div>
    </div>
</div>

{{!-- tạo form hidden để thực hiện submit --}}
<form id="add-to-cart-form" method="POST"></form>


<script>
    //add to cart
    const add_cartsBtn = document.querySelectorAll('#add_cart')
    if (add_cartsBtn) {
        add_cartsBtn.forEach(function (add_cartBtn) {
            add_cartBtn.addEventListener('click', function (e) {
                e.preventDefault()
                const productId = add_cartBtn.getAttribute('data-product-id')
                const add_to_cart_form = document.querySelector('#add-to-cart-form')
                add_to_cart_form.action = '/cart/' + productId + '?_method=PUT'
                add_to_cart_form.submit()
            })
        })
    }

    //Click img in listImages
    const listImgs_img = document.querySelectorAll('.listImgs_img')
    const larger_img = document.querySelector('.larger_img')
    listImgs_img.forEach(function (image) {
        image.addEventListener('click', function () {
            larger_img.src = image.src
        })
    })

    //login navigation
    const nav_login_btn = document.querySelector('#nav_login_btn')
    if (nav_login_btn) {
        nav_login_btn.addEventListener('click', function () {
            document.cookie = 'previousPath=' + window.location.href + '; path=/'
            window.location.href = 'http://localhost:3333/auth/login'
        })
    }
    
    //handle replyCmt button
    function replyCmtFunc(element) {
        const repcmtParentBtn = element.getAttribute('data_cmtId')
        const reply_comment_forms = document.querySelectorAll('.reply_comment_form')
        reply_comment_forms.forEach((reply_comment_form) => {
            const reply_comment_form_cmtId = reply_comment_form.getAttribute('data_cmtId')
            if (repcmtParentBtn === reply_comment_form_cmtId) {
                if (reply_comment_form.classList.contains('d-none')) {
                    reply_comment_form.classList.remove('d-none')
                } else {
                    reply_comment_form.classList.add('d-none')
                }
            }
        })
    }

    {{!-- //click order_btn
    const order_btn = document.querySelector('#order_btn')
    order_btn.addEventListener('click', function () {
        const productId = this.getAttribute('data-product-id')
        
    }) --}}

    document.addEventListener("DOMContentLoaded", function () {
        //Load comments
        const comment_block = document.querySelector('.comment_block')
        function loadComments() {
            const productId = comment_block.getAttribute('data-productId')
            const accountId = comment_block.getAttribute('data-accountId')
            const url = `/comment/${productId}/render-comment`
            fetch(url)
                .then((response) => {
                    return response.json()
                })
                .then((comments) => {
                    document.querySelector('.count_cmts').innerText = `( ${comments.length} đánh giá )`
                    if (Array.isArray(comments) && comments.length > 0) {
                        comment_block.innerHTML = ''
                        var htmls = comments.map((comment) => {
                            // Render thông tin comment
                            const commentHtml = `
                                <form method="POST" action="/comment/${comment._id}?_method=DELETE" class="comment_content mt-2 p-2" style="border-bottom: 1px solid #000;">
                                    <div class="d-flex justify-content-between">
                                        <div class="d-flex">
                                            <img src="${comment.account.images}" style="width: 30px; height: 30px; border-radius: 50%; object-fit: cover; margin-right: 5px">
                                            <h6 class="mb-0">${comment.account.name}</ class="mb-0">
                                            <button onclick="replyCmtFunc(this)" class="btn btn-link btn-sm replyCmtParent" type="button" data_cmtId ="${comment._id}">Trả lời</button>
                                        </div>
                                        <div>
                                            ${accountId === comment.account._id ? '<button class="btn btn-link btn-sm deleteCmt" type="submit">Xóa</button>' : ''}
                                            <small style="font-style: italic;">Ngày: ${comment.addedAt}</small>
                                        </div>
                                    </div>
                                    <p class="ml-4 mb-0">${comment.content}</p>
                                </form>`

                            // Render thông tin replys (nếu có)
                            const replysHtml = comment.replys.map((reply) => `
                                <form method="POST" action="/comment/reply/${comment._id}?replyCmtId=${reply._id}&_method=DELETE" class="reply_comments mt-2 ml-5 p-2">
                                    <div class="d-flex justify-content-between">
                                        <div class="d-flex">
                                            <img src="${reply.account.images}" style="width: 20px; height: 20px; border-radius: 50%; object-fit: cover; margin-right: 5px">
                                            <h6>${reply.account.name}</h6>  
                                        </div>
                                        <div>
                                            ${accountId === reply.account._id ? '<button class="btn btn-link btn-sm deleteReplyCmt" type="submit">Xóa</button>' : ''}
                                            <small style="font-style: italic;">Ngày: ${reply.addedAt}</small>
                                        </div>
                                    </div>
                                    <p class="ml-2 mb-0">${reply.replyContent}</p>
                                </form>`).join('')

                            // Render form trả lời cho comment
                            const replyFormHtml = `
                                <form class="reply_comment_form mt-2 ml-5 d-none" data_cmtId ="${comment._id}"  method="POST" action="/comment/reply/${comment._id}?_method=PUT">
                                    <input id="replyContent" type="text" class="form-control mb-2" name="replyContent" placeholder="nhập câu trả lời..." />
                                    <button type="submit" class="btn btn-primary btn-sm  mb-2">Trả lời</button>
                                </form>`

                            // Kết hợp tất cả các phần vào một HTML duy nhất cho comment
                            return `<div class = "bg-light">${commentHtml} ${replysHtml} ${replyFormHtml}</div>`
                        })
                        comment_block.innerHTML = htmls.join("");
                    } else {
                        comment_block.innerHTML = `<small>Chưa có đánh giá cho sản phẩm này.</small>`
                    }

                })
                .catch(() => { console.log("Failed to fetch") })
        }

        loadComments()

    })

</script>